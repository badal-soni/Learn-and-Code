@startuml
' Class diagram for controllers, services, service implementations, and repositories

package com.intimetec.newsaggregation.controller {
  class AuthController {
    - authService: AuthService
    + login(): ResponseEntity
    + register(): ResponseEntity
  }
  class ExternalServerConfigurationController {
    - externalServerConfigurationService: ExternalServerConfigurationService
    + configureServer(): ResponseEntity
  }
  class KeywordsController {
    - keywordService: KeywordService
    + addKeyword(): ResponseEntity
    + removeKeyword(): ResponseEntity
  }
  class NewsCategoryController {
    - newsCategoryService: NewsCategoryService
    + getCategories(): ResponseEntity
  }
  class NewsController {
    - newsService: NewsService
    + getNews(): ResponseEntity
    + saveNews(): ResponseEntity
  }
  class NotificationController {
    - notificationConfigurationService: NotificationConfigurationService
    + getNotifications(): ResponseEntity
  }
}

package com.intimetec.newsaggregation.service {
  class AuthService {
    + authenticate(): User
    + registerUser(): User
  }
  class ExternalServerConfigurationService {
    + configure(): void
  }
  class KeywordService {
    + addKeyword(): void
    + removeKeyword(): void
  }
  class NewsCategoryService {
    + getAllCategories(): List<NewsCategory>
  }
  class NewsService {
    + fetchNews(): List<News>
    + saveNews(): void
  }
  class NotificationConfigurationService {
    + configureNotifications(): void
  }
}

package com.intimetec.newsaggregation.service.impl {
  class AuthServiceImpl {
    - adminRepository: AdminRepository
    - userRepository: UserRepository
    - userRolesRepository: UserRolesRepository
    - bCryptPasswordEncoder: BCryptPasswordEncoder
    - emailRegistryRepository: EmailRegistryRepository
    - jwtUtility: JwtUtility
    + authenticate(): User
    + registerUser(): User
  }
  class ExternalServerConfigurationServiceImpl {
    - externalServerDetailsRepository: ExternalServerDetailsRepository
    + configure(): void
  }
  class KeywordServiceImpl {
    - keywordsRepository: KeywordsRepository
    + addKeyword(): void
    + removeKeyword(): void
  }
  class NewsCategoryServiceImpl {
    - newsCategoryRepository: NewsCategoryRepository
    + getAllCategories(): List<NewsCategory>
  }
  class NewsServiceImpl {
    - newsRepository: NewsRepository
    + fetchNews(): List<News>
    + saveNews(): void
  }
  class NotificationConfigurationServiceImpl {
    - notificationConfigurationRepository: NotificationConfigurationRepository
    + configureNotifications(): void
  }
}

package com.intimetec.newsaggregation.repository {
  class UserRepository extends JpaRepository {
    + findByEmail(String email): Optional<User>
  }
  class NewsRepository extends JpaRepository {
    + findAll(): List<News>
  }
  class NewsCategoryRepository extends JpaRepository {
    + findAll(): List<NewsCategory>
  }
  class SavedArticleRepository extends JpaRepository {
    + findByUser(User user): List<SavedArticle>
  }
  class NotificationConfigurationRepository extends JpaRepository {
    + findByUser(User user): List<NotificationConfiguration>
  }
}

' Dependency injection relationships
AuthController --> AuthService
ExternalServerConfigurationController --> ExternalServerConfigurationService
KeywordsController --> KeywordService
NewsCategoryController --> NewsCategoryService
NewsController --> NewsService
NotificationController --> NotificationConfigurationService

AuthService --> UserRepository
ExternalServerConfigurationService --> ExternalServerDetailsRepository
KeywordService --> KeywordsRepository
NewsCategoryService --> NewsCategoryRepository
NewsService --> NewsRepository
NotificationConfigurationService --> NotificationConfigurationRepository

AuthServiceImpl --> AdminRepository
AuthServiceImpl --> UserRepository
AuthServiceImpl --> UserRolesRepository
AuthServiceImpl --> BCryptPasswordEncoder
AuthServiceImpl --> EmailRegistryRepository
AuthServiceImpl --> JwtUtility
ExternalServerConfigurationServiceImpl --> ExternalServerDetailsRepository
KeywordServiceImpl --> KeywordsRepository
NewsCategoryServiceImpl --> NewsCategoryRepository
NewsServiceImpl --> NewsRepository
NotificationConfigurationServiceImpl --> NotificationConfigurationRepository

@enduml
